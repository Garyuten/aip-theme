// ==========================================================================
// Mixins
// Thanks to @sutterlity
// https://github.com/sutter/POPY-Starter-integration-web/blob/master/scss/tools/_mixins.scss
// ==========================================================================

/**
 * SMACSS Theming
 * @example scss
 * .foobar {
 *   background: #ff3377;
 *   @include theme(beccapurple){
 *     background: #663399;
 *   }
 * }
 * @param {String} $name - theme name
 */

@mixin theme($name) {
  @if $theme == $name {
     @content;
  }
}

/**
 * Buttons
 * This customises your buttons with a different background color and text color.
 * If no text color is specified it will default to white.
 * @param {String} $color-background - background color
 * @param {String} $color-text (#fff) - text color
 * @example scss
 * .foobar { @include btn(#f37) { ... } }
 */

@mixin btn($color-background, $color-text: #fff) {
  background-color: $color-background;
  border-color: darken($color-border, 6%);
  color: $color-text;
}

/**
 * Media Queries
 * Allows you to use inline media queries.
 * @link http://jakearchibald.github.com/sass-ie/
 * @param {String} $breakpoint - breakpoint
 * @param {String} $query (min-width) - query type
 * @param {String} $type (screen) - media type
 * @example scss
 * .foobar { @include mq(20em) { ... } }
 */

@mixin mq($breakpoint, $query: 'min-width', $type: 'screen') { // breakpoint can be a variable
  // if media queries are not supported
  @if $fix-mqs {
    @if $fix-mqs >= $breakpoint { // ...and if the fixed breakpoint is greater than query...
      @content; // ...output the content the user gave us.
    }
  }
  // Otherwise, output it using a regular media query
  @else {
    @media #{$type} and (#{$query}: #{$breakpoint}) { @content; }
  }
 }

/**
 * IE Specific Styles
 * @example scss
 * .foobar {
 *   .lt-ie8 & { @include old-ie { ... } }
 *   .lt-ie9 & { @include old-ie { ... } }
 * }
 */

@mixin old-ie {
  @if $old-ie {
     @content;
  }
}

/**
 * Sass version of Sticky Footer by Ryan Fait
 * @link http://ryanfait.com/sticky-footer/
 * @param {String} $footer_height - height of footer including padding or borders
 * @param {String} $root_selector (.site) - main wrapper element
 * @param {String} $root_footer_selector (.push) - hidden element that "pushes" down the footer
 * @param {String} $footer_selector (footer) - footer element
 * @example scss
 * .foobar { @include sticky-footer(4em) { ... } }
 */

@mixin sticky-footer($footer_height, $root_selector:".site", $root_footer_selector:".push", $footer_selector:"footer") {
  html, body {height: 100%;}
  #{$root_selector} {
    width: 100%;
    min-height: 100%;
    height: auto !important;
    height: 100%;
    margin: 0 auto -#{$footer_height};
    #{$root_footer_selector} {
      height: #{$footer_height};
    }
  }
  #{$footer_selector} {
    clear: both;
    position: relative;
    height: #{$footer_height};
  }
}

/**
 * Fullscreen Background for < IE8
 * @link http://css-tricks.com/perfect-full-page-background-image/
 * @example scss
 * .foobar { @include fullscreen-bg() { ... } }
 */

@mixin fullscreen-bg() {
  position: fixed;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  img {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    min-width: 50%;
    min-height: 50%;
  }
}

/**
 * @param {number} $opacity
 * @example scss
 * .foobar { @include opacity(4) { ... } }
 */
@mixin opacity($opacity) {
  filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
  opacity: $opacity;

  /* Hack IE6 */
  .lt-ie7 & {
    filter : alpha(opacity=#{round($opacity * 100)});
    zoom: 1;
  }
}

/**
 * @link http://bit.ly/thoughtbot-bourbon-inline-block
 * @require {mixin} old-ie
 * @param {String} $alignment (baseline)
 * @example scss
 * .foobar { @include inline-block() { ... } }
 */

@mixin inline-block($alignment: baseline) {
  display: inline-block;
  @if $alignment and $alignment != none {
    vertical-align: $alignment;
  }
  @include old-ie {
    zoom:1;
    *display:inline;
    *vertical-align:auto;
  }
}

/**
 * Retina Displays
 * @param {String} $image - image url
 * @param {String} $width - image width
 * @param {String} $height - image height
 * @example scss
 * .foobar { @include image-2x('img/logo.png', 200px, 300px) { ... } }
 */

@mixin image-2x($image, $width, $height) {

  @media (min--moz-device-pixel-ratio: 1.3),
        (-o-min-device-pixel-ratio: 2.6/2),
        (-webkit-min-device-pixel-ratio: 1.3),
        (min-device-pixel-ratio: 1.3),
        (min-resolution: 1.3dppx) {

    // on retina, use an image that's scaled by 2
    background-image: url($image);
    background-size: $width $height;
  }
}

/**
 * RGBA Fallback
 * @param {String} $color
 * @param {String} $percent
 * @example scss
 * .foobar { @include rgba-bg(#f37,.9) { ... } }
 */

@mixin rgba-bg($color, $percent) {
  background: $color;
  background: rgba($color, $percent);
}


// clearfix
// --------------------------------------------------

@mixin cf {
  *zoom: 1;
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Flexbox Layout
// --------------------------------------------------

@mixin my-flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}



// 同じテキストシャドウ 繰り返し
$text-shadowList: ' ';
@mixin text-shadow-repeat($value : 0 0 1px rgba(0,0,0,0.3),$num : 1) {
  $text-shadowList : $value;
  @for $i from 1 through $num - 1 {
    $text-shadowList : unquote($text-shadowList + "," + $value);
  }
  text-shadow: $text-shadowList;
}

// 透過PNGへのドロップシャドウ
@mixin filter-drop-shadow ($value : 0 0 1px rgba(0,0,0,0.3)) {
  $filter-drop-shadowList : $value;
  -webkit-filter: drop-shadow($filter-drop-shadowList);
  -moz-filter: drop-shadow($filter-drop-shadowList);
  //-ms-filter: drop-shadow($filter-drop-shadowList);
  -o-filter: drop-shadow($filter-drop-shadowList);
  filter: drop-shadow($filter-drop-shadowList);
}

// ----------------------------------------------------------------------
// font-size
// ----------------------------------------------------------------------

@mixin f-m($size ,$bold:normal ,$color:#333) {
  font-family:"ヒラギノ明朝 Pro W3", "Hiragino Mincho Pro", "HGS明朝E", "ＭＳ Ｐ明朝", serif;
  font-weight: $bold;
//  font-size:em-calc($size);
  font-size: ($size)+px;
  font-size: ( $size / 10) + rem;
  text-shadow: none;
  color: $color;
}

@mixin fs($size) {
//  font-size:em-calc($size);
  font-size: ($size)+px;
  font-size: ( $size / 10) + rem;
}

// LIR（Leahy/Langridge Image Replacement　リーフィー/ラングリッジ式画像置換）
@mixin LIR($h) {
  display: inline-block;
  padding-top:  ($h)+px;
  height: 0;
  overflow: hidden;
}


// icon font  ( Font Awesome )
@mixin fa ($code : null) {
  @if $code {
    content: $code;
  }
  display: inline-block;
  margin-left: 3px;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @include box-sizing(border-box);
}

// icon font  (icomoon)
@mixin icon ($code : null) {
  @if $code {
    content: $code;
  }
  display: inline-block;
  line-height: 1;
  font-family: FontAwesome;
  font-size: inherit;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-decoration: inherit;
  text-align: center;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0);
  box-sizing: border-box;
  text-decoration: none;
  &:hover {
    text-decoration: none;
  }
}

// icon font  (icomoon)
@mixin mdi-icon($ascii) {
  display: inline-block;
  content: $ascii;
  margin: 0 0.2em;
  vertical-align: middle;
  speak: none;
  font-family: "Material-Design-Icons";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}



// formのinputとボタンの高さを合わせる
@mixin input_height() {
  display: inline-block;
  padding-top: 0;
  padding-bottom: 0;
  @include fs(18);
  height: 2.2em;
  line-height: 2.2em;
}

// 指定色でホーバー時の色を暗くする
@mixin link-bgColor-hover-darken ($color) {
  background-color: $color;
  &:hover {
    background-color: darken($color ,10%);
  }
}

// link,hover 時のテキスト色、背景色
@mixin link-hover ($color,  $bgcolor : null ,  $hover-color : null, $hover-bgcolor : null ) {
  color: $color;
  @if $bgcolor {
    background-color: $bgcolor;
  } @else {
    background-color: transparent;
  }

  &:link {
    color: $color;
    @if $bgcolor {
      background-color: $bgcolor;
    } @else {
      background-color: transparent;
    }
  }

  &:hover {
    color: $hover-color;
    text-decoration: none;
    @if $hover-bgcolor {
      background-color: $hover-bgcolor;
    } @else {
      background-color: transparent;
    }
  }
}


// リンクの色をで固定に。ホーバー時の背景色も変化なし
@mixin link-default ($color, $bgcolor : null) {
  &:link { color: $color; }
  &:visited { color: $color; }
  &:hover {
    color: $color;
    @if $bgcolor {
      background-color: darken($bgcolor, 10%);
    } @else {
      background-color: transparent;
    }
  }
  &:active { color: $color; }
}


// アクセントのリンクカラー
@mixin link-accent () {
  color: $color-link-accent;
  text-decoration: none;
  &:visited {
    color: $color-link-accent-visited;
    text-decoration: $link-accent-hover-text-decoration;
  }
  &:hover {
    color: $color-link-accent-hover;
    background-color: $color-link-accent-hover-bg;
    text-decoration: $link-accent-hover-text-decoration;
  }
  &:active {
    color: $color-link-accent-active;
    background-color: $color-link-accent-active-bg;
  }
}




// スプライトイメージ用（簡易版
@mixin sprite-hover-bg-pos ($x,$y, $x2, $y2) {
  background-position: (-$x)+px (-$y)+px;
  a:hover & {
    background-position: (-$x2)+px (-$y2)+px
  }
}
